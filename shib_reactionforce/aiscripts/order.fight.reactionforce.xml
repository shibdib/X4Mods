<aiscript name="reactionforce" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://x4libonline.ddns.net/libraries/aiscripts.xsd" version="1">
    <!-- Setup context menu order-->
    <order id="ReactionForce" name="{20200505,30100}" description="{20200505,30101}" category="combat" infinite="true">
        <params>
            <!-- Where the reaction force will base itself -->
            <param name="home" default="this.sector" type="object" text="{20200505,30102}" comment="{20200505,301003}">
                <input_param name="class" value="if this.ship.isclass.[class.ship_s, class.ship_xs] then [class.sector, class.station, class.ship_m, class.ship_l, class.ship_xl] else [class.sector, class.station, class.ship_l, class.ship_xl]"/>
            </param>
            <!-- Should we dock when idle? -->
            <param name="dockWhenIdle" type="bool" default="false" text="{20200505,30104}" comment="{20200505,30105}"/>
            <!-- Max range this force will respond -->
            <param name="responseRange" default="1" type="number" text="{20200505,30106}" comment="{20200505,30107}">
                <input_param name="startvalue" value="0"/>
                <input_param name="min" value="0"/>
                <input_param name="max" value="[this.ship.pilot.skill.piloting / 2, 3].max"/>
                <input_param name="step" value="1"/>
            </param>
            <!-- Respond to ships? -->
            <param name="shipResponse" type="bool" default="true" text="{20200505,30108}" comment="{20200505,30109}"/>
            <!-- What percent of remaining hp/shields should get a response -->
            <param name="hpCutoffShip" default="100" type="number" text="{20200505,30110}" comment="{20200505,30111}">
                <input_param name="startvalue" value="100"/>
                <input_param name="min" value="1"/>
                <input_param name="max" value="100"/>
                <input_param name="step" value="5"/>
            </param>
            <!-- Respond to stations? -->
            <param name="stationResponse" type="bool" default="true" text="{20200505,30112}" comment="{20200505,30113}"/>
            <!-- What percent of remaining hp/shields should get a response -->
            <param name="hpCutoffStation" default="100" type="number" text="{20200505,30114}" comment="{20200505,30115}">
                <input_param name="startvalue" value="100"/>
                <input_param name="min" value="1"/>
                <input_param name="max" value="100"/>
                <input_param name="step" value="5"/>
            </param>
            <!-- Respond to player? -->
            <param name="playerResponse" type="bool" default="true" text="{20200505,30116}" comment="{20200505,30117}"/>
            <!-- Respond to beacons? -->
            <param name="distressResponse" type="bool" default="false" text="{20200505,30118}" comment="{20200505,30119}"/>
            <!-- Would you like to receive a notification when this ship is dispatched? -->
            <param name="notifyMe" type="bool" default="false" text="{20200505,30120}" comment="{20200505,30121}"/>
            <!-- Subordinate? -->
            <param name="reactionSubordinate" type="internal" default="null" comment="Is this a subordinate?"/>
            <!-- responding? -->
            <param name="activeResponse" type="internal" default="null" comment="Is it responding?"/>
        </params>
        <requires>
            <match shiptype="shiptype.lasertower" negate="true"/>
        </requires>
    </order>
    <interrupts>
        <handler ref="SectorChangeHandler"/>
        <handler ref="ScannedHandler"/>
        <handler ref="InspectedHandler"/>
        <handler ref="TargetInvalidHandler"/>
        <handler ref="ResupplyHandler"/>
        <!-- Reload order if using old version -->
        <handler>
            <conditions>
                <check_all>
                    <event_game_loaded/>
                    <!-- Subordinates ignore -->
                    <check_value value="@$reactionSubordinate == null"/>
                    <!-- Version check -->
                    <check_value value="global.$reactionForceVersion != 201"/>
                </check_all>
            </conditions>
            <actions>
                <debug_text text="'SHIB Reaction Force - %s - Resetting order to update to latest version.'.[this.ship.knownname]"/>
                <cancel_all_orders object="this.ship"/>
                <create_order object="this.ship" id="'ReactionForce'" default="true">
                    <param name="home" value="$home" />
                    <param name="dockWhenIdle" value="@$dockWhenIdle" />
                    <param name="responseRange" value="@$responseRange" />
                    <param name="shipResponse" value="@$shipResponse" />
                    <param name="hpCutoffShip" value="@$hpCutoffShip" />
                    <param name="stationResponse" value="@$stationResponse" />
                    <param name="hpCutoffStation" value="@$hpCutoffStation" />
                    <param name="playerResponse" value="@$playerResponse" />
                    <param name="distressResponse" value="@$distressResponse" />
                    <param name="notifyMe" value="@$notifyMe" />
                </create_order>
            </actions>
        </handler>
        <!-- If player owned object is attacked, check if it is in range of the reaction force -->
        <handler>
            <conditions>
                <check_all>
                    <event_player_owned_attacked/>
                    <!-- If target already set ignore -->
                    <check_value value="$responseTarget == null"/>
                    <!-- Subordinates ignore -->
                    <check_value value="@$reactionSubordinate == null"/>
                    <!-- Make sure it's a ship or station -->
                    <check_value value="event.object.isclass.station or event.object.isclass.ship"/>
                    <!-- Make sure it's not a drone or your ship -->
                    <check_value value="not event.object.isclass.ship or (event.object.typename != 'Drone' and event.object != this.ship)"/>
                    <!-- Range check (Always respond if range 0) -->
                    <check_any>
                        <!-- In sector check-->
                        <check_value value="event.object.sector.knownname == this.sector.knownname"/>
                        <!-- Distance check-->
                        <check_value value="$responseRange ge event.object.sector.gatedistance.{if $home.isclass.sector then $home else $home.sector}"/>
                    </check_any>
                    <!-- Check damage -->
                    <check_any>
                        <!-- In sector check-->
                        <check_value value="event.object.sector.knownname == this.sector.knownname"/>
                        <!-- Station check-->
                        <check_value value="event.object.isclass.station and $stationResponse == true and (event.object.hullpercentage + event.object.shieldpercentage) lt ($hpCutoffStation + ($hpCutoffStation * (event.object.maxshield != 0)))"/>
                        <!-- Ship check-->
                        <check_value value="event.object.isclass.ship and $shipResponse == true and (event.object.hullpercentage + event.object.shieldpercentage) lt ($hpCutoffShip + ($hpCutoffShip * (event.object.maxshield != 0)))"/>
                    </check_any>
                    <!-- Check if player -->
                    <check_value value="event.object != player.controlled or $playerResponse"/>
                </check_all>
            </conditions>
            <actions>
                <debug_text text="'SHIB Reaction Force - Attack checks passed, setting response target - %s - For response force - %s'.[event.object.knownname, this.ship.knownname]"/>
                <set_value name="$responseTarget" exact="event.object"/>
                <set_value name="$activeResponse" exact="true"/>
                <set_value name="$aggressor" exact="event.param"/>
                <set_value name="$responding" exact="null"/>
                <set_value name="$idling" exact="null"/>
                <abort_called_scripts resume="start"/>
            </actions>
        </handler>
        <!-- If distress drone is launched in system and it's from a friend -->
        <handler>
            <conditions>
                <check_all>
                    <event_distressdrone_launched space="this.sector"/>
                    <!-- Distress drone response -->
                    <check_value value="@$distressResponse"/>
                    <!-- Subordinates ignore -->
                    <check_value value="@$reactionSubordinate == null"/>
                    <!-- Check if in system -->
                    <check_value value="event.param.sector == this.ship.sector"/>
                    <!-- Check if friend -->
                    <check_value value="event.param.owner.relationto.{faction.player} gt 0f"/>
                </check_all>
            </conditions>
            <actions>
                <do_if value="$responseTarget == null and event.param2 != this.ship">
                    <debug_text text="'SHIB Reaction Force - Distress drone in sector - %s, responding to - %s - For response force - %s'.[event.param.sector.knownname, event.param.knownname, this.ship.knownname]"/>
                    <set_value name="$responseTarget" exact="event.param"/>
                    <set_value name="$responding" exact="null"/>
                    <set_value name="$idling" exact="null"/>
                    <abort_called_scripts resume="start"/>
                </do_if>
            </actions>
        </handler>
        <!-- If you gain a subordinate set their orders correctly -->
        <handler>
            <conditions>
                <event_object_subordinate_added object="this.ship"/>
            </conditions>
            <actions>
                <do_if value="event.param.typename != 'Drone' and not event.param.defaultorder or event.param.defaultorder.id != 'ReactionForce'">
                    <create_order object="event.param" id="'ReactionForce'" default="true">
                        <param name="home" value="$home" />
                        <param name="dockWhenIdle" value="$dockWhenIdle" />
                        <param name="reactionSubordinate" value="true" />
                        <param name="activeResponse" value="$activeResponse" />
                    </create_order>
                </do_if>
            </actions>
        </handler>
        <!-- If your escort target is too far away cancel -->
        <handler>
            <conditions>
                <event_object_changed_sector object="this.ship"/>
                <!-- Subordinates ignore -->
                <check_value value="@$reactionSubordinate == null"/>
                <check_any>
                    <check_all>
                        <!-- Has response target -->
                        <check_value value="$responseTarget"/>
                        <!-- Distance check-->
                        <check_value value="$responseRange lt $responseTarget.sector.gatedistance.{if $home.isclass.sector then $home else $home.sector}"/>
                    </check_all>
                    <check_all>
                        <!-- Has aggressor target -->
                        <check_value value="$aggressor"/>
                        <!-- Distance check-->
                        <check_value value="$responseRange lt $aggressor.sector.gatedistance.{if $home.isclass.sector then $home else $home.sector}"/>
                    </check_all>
                </check_any>
            </conditions>
            <actions>
                <cancel_all_orders object="this.ship"/>
                <set_value name="$responseTime" exact="null"/>
                <set_value name="$responding" exact="null"/>
                <set_value name="$responseTarget" exact="null"/>
                <set_value name="$idling" exact="null"/>
                <set_value name="$activeResponse" exact="null"/>
                <set_value name="$aggressor" exact="null"/>
                <resume label="start"/>
            </actions>
        </handler>
    </interrupts>
    <!--INIT-->
    <init>
        <set_value name="global.$reactionForceVersion" exact="200"/>
        <set_value name="$started" exact="player.age"/>
        <set_value name="$responseTime" exact="null"/>
        <set_value name="$responseTarget" exact="null"/>
        <set_value name="$aggressor" exact="null"/>
        <set_value name="$responding" exact="null"/>
        <set_value name="$idling" exact="null"/>
    </init>
    <attention min="unknown">
        <actions>
            <label name="start"/>
            <!-- Are you a subordinate? -->
            <do_if value="@$reactionSubordinate or (this.ship.commander and this.ship.commander.isclass.ship and this.ship.commander.defaultorder.id == 'ReactionForce')">
                <resume label="subordinate"/>
            </do_if>
            <!-- Handle if response target is set -->
            <do_if value="$responseTarget != null">
                <!-- If not already dispatched -->
                <do_if value="$responding == null or not this.ship.orders.count" chance="this.ship.pilot.skill.piloting * 20">
                    <!-- Clear orders -->
                    <cancel_all_orders object="this.ship"/>
                    <!-- Wake up subordinates -->
                    <do_if value="this.ship.subordinates.count">
                        <do_all exact="this.ship.subordinates.count" counter="$c">
                            <set_value name="$subordinate" exact="this.ship.subordinates.{$c}"/>
                            <do_if value="$subordinate.typename != 'Drone'">
                                <create_order object="$subordinate" id="'ReactionForce'" default="true">
                                    <param name="home" value="$home" />
                                    <param name="dockWhenIdle" value="$dockWhenIdle" />
                                    <param name="reactionSubordinate" value="true" />
                                    <param name="activeResponse" value="$activeResponse" />
                                </create_order>
                            </do_if>
                        </do_all>
                    </do_if>
                    <!-- Check response target -->
                    <set_value name="$clearResponse" exact="null"/>
                    <!-- Dead response target -->
                    <do_if value="not $responseTarget.exists">
                        <set_value name="$clearResponse" exact="true"/>
                    </do_if>
                    <!-- No longer damaged enough -->
                    <do_elseif value="(($responseTarget.isclass.station and $stationResponse == true and (($responseTarget.hullpercentage + $responseTarget.shieldpercentage) - 5) gt ($hpCutoffStation + ($hpCutoffStation * ($responseTarget.maxshield != 0)))) or
                ($responseTarget.isclass.ship and $shipResponse == true and (($responseTarget.hullpercentage + $responseTarget.shieldpercentage) - 5) gt ($hpCutoffShip + ($hpCutoffShip * ($responseTarget.maxshield != 0))))) and ($responseTime + 180s) lt player.age">
                        <set_value name="$clearResponse" exact="true"/>
                    </do_elseif>
                    <!-- If response needs to be cleared do so -->
                    <do_if value="$clearResponse">
                        <debug_text text="'SHIB Reaction Force - %s - No longer responding to %s'.[this.ship.knownname, $responseTarget.knownname]"/>
                        <set_value name="$responseTime" exact="null"/>
                        <set_value name="$responding" exact="null"/>
                        <set_value name="$responseTarget" exact="null"/>
                        <set_value name="$idling" exact="null"/>
                        <set_value name="$activeResponse" exact="null"/>
                        <set_value name="$aggressor" exact="null"/>
                        <resume label="start"/>
                    </do_if>
                    <do_else>
                        <!-- Get some XP for responding -->
                        <apply_experience entity="this" experience="'ship_disable_easy'" chance="20"/>
                        <set_value name="$responseTime" exact="player.age"/>
                        <set_value name="$activeResponse" exact="true"/>
                        <!-- Handle notifications/Log -->
                        <do_if value="$notifyMe">
                            <show_notification text="'{20200505,30122}'.[this.ship.knownname, $responseTarget.knownname]" priority="9"/>
                        </do_if>
                        <write_to_logbook category="alerts" title="'{20200505,30123}:'" text="'{20200505,30124}'.[this.ship.knownname, $responseTarget.knownname, $responseTarget.sector.knownname]"/>
                        <set_value name="$responding" exact="true"/>
                        <set_value name="$responseTime" exact="player.age"/>
                        <set_value name="$idling" exact="null"/>
                        <!-- If it's a station protect the station -->
                        <do_if value="$responseTarget.isclass.station">
                            <debug_text text="'SHIB Reaction Force - %s - Responding to Station %s'.[this.ship.knownname, $responseTarget.knownname]"/>
                            <create_order object="this.ship" id="'ProtectStation'">
                                <param name="station" value="$responseTarget"/>
                                <param name="timeout" value="300s"/>
                            </create_order>
                        </do_if>
                        <!-- If it's a ship protect the ship -->
                        <do_elseif value="$responseTarget.isclass.ship">
                            <debug_text text="'SHIB Reaction Force - %s - Responding to Ship %s'.[this.ship.knownname, $responseTarget.knownname]"/>
                            <create_order object="this.ship" id="'ProtectShip'">
                                <param name="target" value="$responseTarget"/>
                                <param name="timeout" value="300s"/>
                            </create_order>
                        </do_elseif>
                        <!-- New response -->
                        <do_if value="@$aggressor">
                            <create_order object="this.ship" id="'Attack'" immediate="true">
                                <param name="primarytarget" value="$aggressor"/>
                                <param name="pursuetargets" value="false"/>
                                <param name="escort" value="$responseTarget"/>
                                <param name="allowothertargets" value="true"/>
                            </create_order>
                        </do_if>
                    </do_else>
                </do_if>
            </do_if>
            <!-- If no response target it set and ship doesn't already have idle orders -->
            <do_elseif value="$idling == null and $responseTarget == null">
                <debug_text text="'SHIB Reaction Force - %s - IDLE'.[this.ship.knownname]"/>
                <set_value name="$responseTime" exact="null"/>
                <set_value name="$responding" exact="null"/>
                <set_value name="$activeResponse" exact="null"/>
                <set_value name="$idling" exact="true"/>
                <!-- Set subordinates to idle state -->
                <do_if value="this.ship.subordinates.count">
                    <do_all exact="this.ship.subordinates.count" counter="$c">
                        <set_value name="$subordinate" exact="this.ship.subordinates.{$c}"/>
                        <do_if value="$subordinate.typename != 'Drone'">
                            <create_order object="$subordinate" id="'ReactionForce'" default="true">
                                <param name="home" value="$home" />
                                <param name="dockWhenIdle" value="$dockWhenIdle" />
                                <param name="reactionSubordinate" value="true" />
                                <param name="activeResponse" value="$activeResponse" />
                            </create_order>
                        </do_if>
                    </do_all>
                </do_if>
                <!-- If home is a station/dockable -->
                <do_if value="not $home.isclass.space">
                    <!-- Set home to commander if we own the item -->
                    <do_if value="$home.owner == this.ship.owner">
                        <set_object_commander object="this.ship" commander="$home" assignment="assignment.defence"/>
                    </do_if>
                    <!-- If you should and can dock do so -->
                    <do_if value="$dockWhenIdle == true and $home.dockingallowed.{this.ship}">
                        <do_if value="this.ship.assigneddock == null or this.ship.assigneddock.knownname != $home.knownname">
                            <debug_text text="'SHIB Reaction Force - %s - Docking at %s'.[this.ship.knownname, $home.knownname]"/>
                            <set_command command="command.dockat" param="$home"/>
                            <run_script name="'order.dock'">
                                <param name="destination" value="$home"/>
                            </run_script>
                        </do_if>
                    </do_if>
                    <!-- Otherwise protect your home station -->
                    <do_elseif value="$home.isclass.station">
                        <debug_text text="'SHIB Reaction Force - %s - Idle Station Guard'.[this.ship.knownname]"/>
                        <set_command command="command.protect" param="$home"/>
                        <run_script name="'order.fight.protect.station'">
                            <param name="station" value="$home"/>
                            <param name="timeout" value="300s"/>
                        </run_script>
                    </do_elseif>
                    <do_elseif value="$home.isclass.ship">
                        <debug_text text="'SHIB Reaction Force - %s - Idle Station Guard'.[this.ship.knownname]"/>
                        <set_command command="command.protect" param="$home"/>
                        <run_script name="'order.fight.protect.ship'">
                            <param name="target" value="$home"/>
                            <param name="timeout" value="300s"/>
                        </run_script>
                    </do_elseif>
                </do_if>
                <!-- If home is a sector patrol the sector -->
                <do_else>
                    <debug_text text="'SHIB Reaction Force - %s - Idle Sector Patrol'.[this.ship.knownname]"/>
                    <set_command command="command.patrol"/>
                    <run_script name="'order.fight.patrol'">
                        <param name="space" value="$home"/>
                        <param name="timeout" value="300s"/>
                    </run_script>
                </do_else>
            </do_elseif>
            <wait exact="5s"/>
            <resume label="start"/>

            <!-- Subordinate code -->
            <label name="subordinate"/>
            <!-- Relay to the subordinates of the subordinate... -->
            <do_if value="this.ship.subordinates.count">
                <do_all exact="this.ship.subordinates.count" counter="$c">
                    <set_value name="$subordinate" exact="this.ship.subordinates.{$c}"/>
                    <do_if value="$subordinate.typename != 'Drone'">
                        <create_order object="$subordinate" id="'ReactionForce'" default="true">
                            <param name="home" value="$home" />
                            <param name="dockWhenIdle" value="$dockWhenIdle" />
                            <param name="reactionSubordinate" value="true" />
                            <param name="activeResponse" value="$activeResponse" />
                        </create_order>
                    </do_if>
                </do_all>
            </do_if>
            <!-- Dock when idle -->
            <do_if value="$dockWhenIdle and not $activeResponse and not this.ship.commander.defaultorder.$activeResponse">
                <do_if value="$idling == null">
                    <set_value name="$idling" exact="true"/>
                    <!-- Break loop if docking found else escort -->
                    <do_while value="true">
                        <!-- Check if docked -->
                        <do_if value="this.ship.dock and (not this.ship.dock.station or $home.isclass.station)">
                            <debug_text text="'SHIB Reaction Force - %s - Is already docked.'.[this.ship.knownname]"/>
                            <set_command command="command.dockat" param="this.ship.dock"/>
                            <break/>
                        </do_if>
                        <!-- Try to dock with your commander first -->
                        <do_if value="this.ship.commander.dockingallowed.{this.ship}">
                            <debug_text text="'SHIB Reaction Force - %s - Is docking on the commander.'.[this.ship.knownname]"/>
                            <set_command command="command.dockat" param="this.ship.commander"/>
                            <run_script name="'order.dock'">
                                <param name="destination" value="this.ship.commander"/>
                            </run_script>
                            <break/>
                        </do_if>
                        <!-- Try to dock on your peers next -->
                        <do_all exact="this.ship.commander.subordinates.count" counter="$c">
                            <set_value name="$peer" exact="this.ship.commander.subordinates.{$c}"/>
                            <do_if value="$peer != this.ship and $peer.dockingallowed.{this.ship}">
                                <debug_text text="'SHIB Reaction Force - %s - Is docking on a peer.'.[this.ship.knownname]"/>
                                <set_command command="command.dockat" param="$peer"/>
                                <run_script name="'order.dock'">
                                    <param name="destination" value="$peer"/>
                                </run_script>
                                <break/>
                            </do_if>
                        </do_all>
                        <!-- Otherwise try to dock at home -->
                        <do_if value="not $home.isclass.sector and $home.dockingallowed.{this.ship}">
                            <debug_text text="'SHIB Reaction Force - %s - Is docking with the commander.'.[this.ship.knownname]"/>
                            <set_command command="command.dockat" param="$home"/>
                            <run_script name="'order.dock'">
                                <param name="destination" value="$home"/>
                            </run_script>
                            <break/>
                        </do_if>
                        <!-- Otherwise escort -->
                        <debug_text text="'SHIB Reaction Force - %s - Cannot find anywhere to dock so is escorting'.[this.ship.knownname]"/>
                        <set_command command="command.escort" param="this.ship.commander"/>
                        <run_script name="'order.fight.escort'">
                            <param name="target" value="this.ship.commander"/>
                            <param name="overrideformationskill" value="true"/>
                            <param name="timeout" value="180s"/>
                        </run_script>
                        <break/>
                    </do_while>
                </do_if>
            </do_if>
            <!-- If not dock when idle or if responding, escort behavior -->
            <do_else>
                <set_value name="$idling" exact="null"/>
                <!-- Handle case for carrier as a commander, small ships respond separately -->
                <do_if value="$activeResponse and this.ship.commander.type == shiptype.carrier and
                (this.ship.class == 'ship_s' or this.ship.class == 'ship_xs')">
                    <!-- Clear orders -->
                    <cancel_all_orders object="this.ship"/>
                    <!-- If it's a station protect the station -->
                    <do_if value="$activeResponse.isclass.station">
                        <debug_text text="'SHIB Reaction Force - %s - Responding from carrier to Station %s'.[this.ship.knownname, $responseTarget.knownname]"/>
                        <create_order object="this.ship" id="'ProtectStation'">
                            <param name="station" value="$activeResponse"/>
                            <param name="timeout" value="300s"/>
                        </create_order>
                    </do_if>
                    <!-- If it's a ship protect the ship -->
                    <do_elseif value="$activeResponse.isclass.ship">
                        <debug_text text="'SHIB Reaction Force - %s - Responding from carrier to Ship %s'.[this.ship.knownname, $responseTarget.knownname]"/>
                        <create_order object="this.ship" id="'ProtectShip'">
                            <param name="target" value="$activeResponse"/>
                            <param name="timeout" value="300s"/>
                        </create_order>
                    </do_elseif>
                </do_if>
                <do_else>
                    <debug_text text="'SHIB Reaction Force - %s - Is moving with the commander'.[this.ship.knownname]"/>
                    <set_command command="command.escort" param="this.ship.commander"/>
                    <run_script name="'order.fight.escort'">
                        <param name="target" value="this.ship.commander"/>
                        <param name="overrideformationskill" value="true"/>
                        <param name="timeout" value="180s"/>
                    </run_script>
                </do_else>
            </do_else>
            <wait min="15s" max="30s"/>
            <resume label="subordinate"/>
            <set_order_syncpoint_reached order="this.ship.order"/>
        </actions>
    </attention>
</aiscript>
